// Code generated by protoc-gen-go.
// source: data_server.proto
// DO NOT EDIT!

package apiclient

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type DataStoreCommand_Command int32

const (
	DataStoreCommand_MULTI_SET DataStoreCommand_Command = 0
	// Deprecated
	// MULTI_RESOLVE_REGEX = 1;
	DataStoreCommand_RESOLVE_MULTI     DataStoreCommand_Command = 2
	DataStoreCommand_DELETE_SUBJECT    DataStoreCommand_Command = 3
	DataStoreCommand_DELETE_ATTRIBUTES DataStoreCommand_Command = 4
	// Deprecated.
	// DELETE_ATTRIBUTES_REGEX = 5;
	DataStoreCommand_LOCK_SUBJECT         DataStoreCommand_Command = 6
	DataStoreCommand_UNLOCK_SUBJECT       DataStoreCommand_Command = 7
	DataStoreCommand_EXTEND_SUBJECT       DataStoreCommand_Command = 8
	DataStoreCommand_MULTI_RESOLVE_PREFIX DataStoreCommand_Command = 9
	DataStoreCommand_SCAN_ATTRIBUTES      DataStoreCommand_Command = 10
)

var DataStoreCommand_Command_name = map[int32]string{
	0:  "MULTI_SET",
	2:  "RESOLVE_MULTI",
	3:  "DELETE_SUBJECT",
	4:  "DELETE_ATTRIBUTES",
	6:  "LOCK_SUBJECT",
	7:  "UNLOCK_SUBJECT",
	8:  "EXTEND_SUBJECT",
	9:  "MULTI_RESOLVE_PREFIX",
	10: "SCAN_ATTRIBUTES",
}
var DataStoreCommand_Command_value = map[string]int32{
	"MULTI_SET":            0,
	"RESOLVE_MULTI":        2,
	"DELETE_SUBJECT":       3,
	"DELETE_ATTRIBUTES":    4,
	"LOCK_SUBJECT":         6,
	"UNLOCK_SUBJECT":       7,
	"EXTEND_SUBJECT":       8,
	"MULTI_RESOLVE_PREFIX": 9,
	"SCAN_ATTRIBUTES":      10,
}

func (x DataStoreCommand_Command) Enum() *DataStoreCommand_Command {
	p := new(DataStoreCommand_Command)
	*p = x
	return p
}
func (x DataStoreCommand_Command) String() string {
	return proto.EnumName(DataStoreCommand_Command_name, int32(x))
}
func (x *DataStoreCommand_Command) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DataStoreCommand_Command_value, data, "DataStoreCommand_Command")
	if err != nil {
		return err
	}
	*x = DataStoreCommand_Command(value)
	return nil
}
func (DataStoreCommand_Command) EnumDescriptor() ([]byte, []int) { return fileDescriptor7, []int{0, 0} }

type DataServerState_Status int32

const (
	DataServerState_AVAILABLE DataServerState_Status = 0
	DataServerState_OFFLINE   DataServerState_Status = 1
)

var DataServerState_Status_name = map[int32]string{
	0: "AVAILABLE",
	1: "OFFLINE",
}
var DataServerState_Status_value = map[string]int32{
	"AVAILABLE": 0,
	"OFFLINE":   1,
}

func (x DataServerState_Status) Enum() *DataServerState_Status {
	p := new(DataServerState_Status)
	*p = x
	return p
}
func (x DataServerState_Status) String() string {
	return proto.EnumName(DataServerState_Status_name, int32(x))
}
func (x *DataServerState_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DataServerState_Status_value, data, "DataServerState_Status")
	if err != nil {
		return err
	}
	*x = DataServerState_Status(value)
	return nil
}
func (DataServerState_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor7, []int{2, 0} }

type DataStoreCommand struct {
	Command          *DataStoreCommand_Command `protobuf:"varint,1,opt,name=command,enum=DataStoreCommand_Command" json:"command,omitempty"`
	Request          *DataStoreRequest         `protobuf:"bytes,2,opt,name=request" json:"request,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *DataStoreCommand) Reset()                    { *m = DataStoreCommand{} }
func (m *DataStoreCommand) String() string            { return proto.CompactTextString(m) }
func (*DataStoreCommand) ProtoMessage()               {}
func (*DataStoreCommand) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *DataStoreCommand) GetCommand() DataStoreCommand_Command {
	if m != nil && m.Command != nil {
		return *m.Command
	}
	return DataStoreCommand_MULTI_SET
}

func (m *DataStoreCommand) GetRequest() *DataStoreRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type DataServerInterval struct {
	// Range of hashes used by the server.
	// Represented as an interval [start, end[.
	Start            *uint64 `protobuf:"varint,1,opt,name=start" json:"start,omitempty"`
	End              *uint64 `protobuf:"varint,2,opt,name=end" json:"end,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DataServerInterval) Reset()                    { *m = DataServerInterval{} }
func (m *DataServerInterval) String() string            { return proto.CompactTextString(m) }
func (*DataServerInterval) ProtoMessage()               {}
func (*DataServerInterval) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

func (m *DataServerInterval) GetStart() uint64 {
	if m != nil && m.Start != nil {
		return *m.Start
	}
	return 0
}

func (m *DataServerInterval) GetEnd() uint64 {
	if m != nil && m.End != nil {
		return *m.End
	}
	return 0
}

type DataServerState struct {
	Status           *DataServerState_Status `protobuf:"varint,1,opt,name=status,enum=DataServerState_Status" json:"status,omitempty"`
	Load             *uint64                 `protobuf:"varint,2,opt,name=load" json:"load,omitempty"`
	Size             *uint64                 `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	NumComponents    *uint64                 `protobuf:"varint,4,opt,name=num_components" json:"num_components,omitempty"`
	AvgComponent     *uint64                 `protobuf:"varint,5,opt,name=avg_component" json:"avg_component,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *DataServerState) Reset()                    { *m = DataServerState{} }
func (m *DataServerState) String() string            { return proto.CompactTextString(m) }
func (*DataServerState) ProtoMessage()               {}
func (*DataServerState) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{2} }

func (m *DataServerState) GetStatus() DataServerState_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return DataServerState_AVAILABLE
}

func (m *DataServerState) GetLoad() uint64 {
	if m != nil && m.Load != nil {
		return *m.Load
	}
	return 0
}

func (m *DataServerState) GetSize() uint64 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *DataServerState) GetNumComponents() uint64 {
	if m != nil && m.NumComponents != nil {
		return *m.NumComponents
	}
	return 0
}

func (m *DataServerState) GetAvgComponent() uint64 {
	if m != nil && m.AvgComponent != nil {
		return *m.AvgComponent
	}
	return 0
}

type DataServerInformation struct {
	Index            *uint64             `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Address          *string             `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	Port             *uint64             `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
	State            *DataServerState    `protobuf:"bytes,4,opt,name=state" json:"state,omitempty"`
	Interval         *DataServerInterval `protobuf:"bytes,5,opt,name=interval" json:"interval,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *DataServerInformation) Reset()                    { *m = DataServerInformation{} }
func (m *DataServerInformation) String() string            { return proto.CompactTextString(m) }
func (*DataServerInformation) ProtoMessage()               {}
func (*DataServerInformation) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{3} }

func (m *DataServerInformation) GetIndex() uint64 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *DataServerInformation) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *DataServerInformation) GetPort() uint64 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *DataServerInformation) GetState() *DataServerState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *DataServerInformation) GetInterval() *DataServerInterval {
	if m != nil {
		return m.Interval
	}
	return nil
}

type DataServerMapping struct {
	// Version of the mapping.
	Version *uint64 `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	// Number of data servers.
	NumServers *uint64 `protobuf:"varint,2,opt,name=num_servers" json:"num_servers,omitempty"`
	// Information about each server.
	Servers []*DataServerInformation `protobuf:"bytes,3,rep,name=servers" json:"servers,omitempty"`
	// Pathing information for subject paths.
	Pathing          []string `protobuf:"bytes,4,rep,name=pathing" json:"pathing,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *DataServerMapping) Reset()                    { *m = DataServerMapping{} }
func (m *DataServerMapping) String() string            { return proto.CompactTextString(m) }
func (*DataServerMapping) ProtoMessage()               {}
func (*DataServerMapping) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{4} }

func (m *DataServerMapping) GetVersion() uint64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *DataServerMapping) GetNumServers() uint64 {
	if m != nil && m.NumServers != nil {
		return *m.NumServers
	}
	return 0
}

func (m *DataServerMapping) GetServers() []*DataServerInformation {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *DataServerMapping) GetPathing() []string {
	if m != nil {
		return m.Pathing
	}
	return nil
}

type DataServerClientInformation struct {
	// Client username.
	Username *string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	// Client password.
	Password *string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	// Client permissions (r, rw, w).
	Permissions      *string `protobuf:"bytes,3,opt,name=permissions" json:"permissions,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DataServerClientInformation) Reset()                    { *m = DataServerClientInformation{} }
func (m *DataServerClientInformation) String() string            { return proto.CompactTextString(m) }
func (*DataServerClientInformation) ProtoMessage()               {}
func (*DataServerClientInformation) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{5} }

func (m *DataServerClientInformation) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *DataServerClientInformation) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *DataServerClientInformation) GetPermissions() string {
	if m != nil && m.Permissions != nil {
		return *m.Permissions
	}
	return ""
}

type DataServerEncryptedCreds struct {
	InitVector       []byte `protobuf:"bytes,1,opt,name=init_vector" json:"init_vector,omitempty"`
	Ciphertext       []byte `protobuf:"bytes,2,opt,name=ciphertext" json:"ciphertext,omitempty"`
	Sha256           []byte `protobuf:"bytes,3,opt,name=sha256" json:"sha256,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DataServerEncryptedCreds) Reset()                    { *m = DataServerEncryptedCreds{} }
func (m *DataServerEncryptedCreds) String() string            { return proto.CompactTextString(m) }
func (*DataServerEncryptedCreds) ProtoMessage()               {}
func (*DataServerEncryptedCreds) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{6} }

func (m *DataServerEncryptedCreds) GetInitVector() []byte {
	if m != nil {
		return m.InitVector
	}
	return nil
}

func (m *DataServerEncryptedCreds) GetCiphertext() []byte {
	if m != nil {
		return m.Ciphertext
	}
	return nil
}

func (m *DataServerEncryptedCreds) GetSha256() []byte {
	if m != nil {
		return m.Sha256
	}
	return nil
}

type DataServerClientCredentials struct {
	Users            []*DataServerClientInformation `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *DataServerClientCredentials) Reset()                    { *m = DataServerClientCredentials{} }
func (m *DataServerClientCredentials) String() string            { return proto.CompactTextString(m) }
func (*DataServerClientCredentials) ProtoMessage()               {}
func (*DataServerClientCredentials) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{7} }

func (m *DataServerClientCredentials) GetUsers() []*DataServerClientInformation {
	if m != nil {
		return m.Users
	}
	return nil
}

type DataServerRebalance struct {
	// ID of operation.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// New mapping information.
	Mapping *DataServerMapping `protobuf:"bytes,2,opt,name=mapping" json:"mapping,omitempty"`
	// Number of files need to move.
	Moving           []uint64 `protobuf:"varint,3,rep,name=moving" json:"moving,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *DataServerRebalance) Reset()                    { *m = DataServerRebalance{} }
func (m *DataServerRebalance) String() string            { return proto.CompactTextString(m) }
func (*DataServerRebalance) ProtoMessage()               {}
func (*DataServerRebalance) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{8} }

func (m *DataServerRebalance) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *DataServerRebalance) GetMapping() *DataServerMapping {
	if m != nil {
		return m.Mapping
	}
	return nil
}

func (m *DataServerRebalance) GetMoving() []uint64 {
	if m != nil {
		return m.Moving
	}
	return nil
}

type DataServerFileCopy struct {
	// Rebalance operation.
	RebalanceId *string `protobuf:"bytes,1,opt,name=rebalance_id" json:"rebalance_id,omitempty"`
	// Directory where the file will be copied.
	Directory *string `protobuf:"bytes,2,opt,name=directory" json:"directory,omitempty"`
	// Filename for the file to copy.
	Filename *string `protobuf:"bytes,3,opt,name=filename" json:"filename,omitempty"`
	// Size of file.
	Size             *uint64 `protobuf:"varint,4,opt,name=size" json:"size,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DataServerFileCopy) Reset()                    { *m = DataServerFileCopy{} }
func (m *DataServerFileCopy) String() string            { return proto.CompactTextString(m) }
func (*DataServerFileCopy) ProtoMessage()               {}
func (*DataServerFileCopy) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{9} }

func (m *DataServerFileCopy) GetRebalanceId() string {
	if m != nil && m.RebalanceId != nil {
		return *m.RebalanceId
	}
	return ""
}

func (m *DataServerFileCopy) GetDirectory() string {
	if m != nil && m.Directory != nil {
		return *m.Directory
	}
	return ""
}

func (m *DataServerFileCopy) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *DataServerFileCopy) GetSize() uint64 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

type DataStoreAuthToken struct {
	Username         *string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Nonce            *string `protobuf:"bytes,2,opt,name=nonce" json:"nonce,omitempty"`
	Hash             *string `protobuf:"bytes,3,opt,name=hash" json:"hash,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DataStoreAuthToken) Reset()                    { *m = DataStoreAuthToken{} }
func (m *DataStoreAuthToken) String() string            { return proto.CompactTextString(m) }
func (*DataStoreAuthToken) ProtoMessage()               {}
func (*DataStoreAuthToken) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{10} }

func (m *DataStoreAuthToken) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *DataStoreAuthToken) GetNonce() string {
	if m != nil && m.Nonce != nil {
		return *m.Nonce
	}
	return ""
}

func (m *DataStoreAuthToken) GetHash() string {
	if m != nil && m.Hash != nil {
		return *m.Hash
	}
	return ""
}

type DataStoreRegistrationRequest struct {
	Port             *uint32             `protobuf:"varint,1,opt,name=port" json:"port,omitempty"`
	Token            *DataStoreAuthToken `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *DataStoreRegistrationRequest) Reset()                    { *m = DataStoreRegistrationRequest{} }
func (m *DataStoreRegistrationRequest) String() string            { return proto.CompactTextString(m) }
func (*DataStoreRegistrationRequest) ProtoMessage()               {}
func (*DataStoreRegistrationRequest) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{11} }

func (m *DataStoreRegistrationRequest) GetPort() uint32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *DataStoreRegistrationRequest) GetToken() *DataStoreAuthToken {
	if m != nil {
		return m.Token
	}
	return nil
}

func init() {
	proto.RegisterType((*DataStoreCommand)(nil), "DataStoreCommand")
	proto.RegisterType((*DataServerInterval)(nil), "DataServerInterval")
	proto.RegisterType((*DataServerState)(nil), "DataServerState")
	proto.RegisterType((*DataServerInformation)(nil), "DataServerInformation")
	proto.RegisterType((*DataServerMapping)(nil), "DataServerMapping")
	proto.RegisterType((*DataServerClientInformation)(nil), "DataServerClientInformation")
	proto.RegisterType((*DataServerEncryptedCreds)(nil), "DataServerEncryptedCreds")
	proto.RegisterType((*DataServerClientCredentials)(nil), "DataServerClientCredentials")
	proto.RegisterType((*DataServerRebalance)(nil), "DataServerRebalance")
	proto.RegisterType((*DataServerFileCopy)(nil), "DataServerFileCopy")
	proto.RegisterType((*DataStoreAuthToken)(nil), "DataStoreAuthToken")
	proto.RegisterType((*DataStoreRegistrationRequest)(nil), "DataStoreRegistrationRequest")
	proto.RegisterEnum("DataStoreCommand_Command", DataStoreCommand_Command_name, DataStoreCommand_Command_value)
	proto.RegisterEnum("DataServerState_Status", DataServerState_Status_name, DataServerState_Status_value)
}

func init() { proto.RegisterFile("data_server.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 845 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x54, 0xdd, 0x6e, 0x23, 0x45,
	0x13, 0x5d, 0xc7, 0x7f, 0x71, 0x8d, 0xed, 0x8c, 0xdb, 0x9b, 0xfd, 0xfc, 0xc1, 0x4a, 0x8c, 0x86,
	0x9f, 0x8d, 0x40, 0x1a, 0x81, 0x25, 0x10, 0x77, 0xc8, 0x76, 0x26, 0xc8, 0xbb, 0xde, 0x64, 0x65,
	0x4f, 0xc2, 0xde, 0x20, 0xab, 0xf1, 0x54, 0xe2, 0x16, 0x9e, 0xee, 0xa1, 0xbb, 0x6d, 0x36, 0xbc,
	0x03, 0x6f, 0xc1, 0x1d, 0x17, 0x3c, 0x02, 0x37, 0x3c, 0x09, 0xbc, 0x06, 0x17, 0xa8, 0xdb, 0xed,
	0x8c, 0x49, 0x56, 0xdc, 0xcd, 0x9c, 0x3e, 0x5d, 0x75, 0xea, 0x54, 0x57, 0x41, 0x27, 0xa5, 0x9a,
	0xce, 0x15, 0xca, 0x0d, 0xca, 0x28, 0x97, 0x42, 0x8b, 0x77, 0xfc, 0x2d, 0xa4, 0x85, 0x44, 0x87,
	0xb4, 0x15, 0x66, 0x94, 0x6b, 0xb6, 0xd8, 0xfe, 0x87, 0xbf, 0x1c, 0x80, 0x7f, 0x4a, 0x35, 0x9d,
	0x19, 0xce, 0x48, 0x64, 0x19, 0xe5, 0x29, 0xf9, 0x18, 0xea, 0x8b, 0xed, 0x67, 0xaf, 0x14, 0x94,
	0x4e, 0xda, 0xfd, 0xff, 0x47, 0xf7, 0x39, 0xd1, 0x8e, 0x1b, 0x42, 0x5d, 0xe2, 0x0f, 0x6b, 0x54,
	0xba, 0x77, 0x10, 0x94, 0x4e, 0xbc, 0x7e, 0xa7, 0xe0, 0x4e, 0xb7, 0x07, 0xe1, 0xef, 0x25, 0xa8,
	0xef, 0xf8, 0x2d, 0x68, 0xbc, 0xbc, 0x9c, 0x24, 0xe3, 0xf9, 0x2c, 0x4e, 0xfc, 0x47, 0xa4, 0x03,
	0xad, 0x69, 0x3c, 0xbb, 0x98, 0x5c, 0xc5, 0x73, 0x0b, 0xfb, 0x07, 0x84, 0x40, 0xfb, 0x34, 0x9e,
	0xc4, 0x49, 0x3c, 0x9f, 0x5d, 0x0e, 0x9f, 0xc7, 0xa3, 0xc4, 0x2f, 0x93, 0x63, 0xe8, 0x38, 0x6c,
	0x90, 0x24, 0xd3, 0xf1, 0xf0, 0x32, 0x89, 0x67, 0x7e, 0x85, 0xf8, 0xd0, 0x9c, 0x5c, 0x8c, 0x5e,
	0xdc, 0x11, 0x6b, 0xe6, 0xf2, 0xe5, 0xf9, 0xbf, 0xb0, 0xba, 0xc1, 0xe2, 0xd7, 0x49, 0x7c, 0x7e,
	0x7a, 0x87, 0x1d, 0x92, 0x1e, 0x3c, 0xde, 0xca, 0xd8, 0x65, 0x7f, 0x35, 0x8d, 0xcf, 0xc6, 0xaf,
	0xfd, 0x06, 0xe9, 0xc2, 0xd1, 0x6c, 0x34, 0x38, 0xdf, 0x4f, 0x04, 0xe1, 0xa7, 0x40, 0x6c, 0x55,
	0xd6, 0xdc, 0x31, 0xd7, 0x28, 0x37, 0x74, 0x45, 0x5a, 0x50, 0x55, 0x9a, 0x4a, 0x6d, 0x5d, 0xaa,
	0x10, 0x0f, 0xca, 0xc8, 0x53, 0x6b, 0x43, 0x25, 0xfc, 0xb5, 0x04, 0x47, 0xc5, 0x95, 0x99, 0xa6,
	0x1a, 0xc9, 0x33, 0xa8, 0x29, 0x4d, 0xf5, 0x5a, 0x39, 0x5b, 0xff, 0x17, 0xdd, 0x63, 0x44, 0x33,
	0x7b, 0x4c, 0x9a, 0x50, 0x59, 0x09, 0xea, 0x42, 0x99, 0x3f, 0xc5, 0x7e, 0xc2, 0x5e, 0xd9, 0xfe,
	0x3d, 0x81, 0x36, 0x5f, 0x67, 0xf3, 0x85, 0xc8, 0x72, 0xc1, 0x91, 0x6b, 0xd5, 0xab, 0x58, 0xfc,
	0x18, 0x5a, 0x74, 0x73, 0x53, 0xe0, 0xbd, 0xaa, 0xd5, 0xf1, 0x01, 0xd4, 0x5c, 0xd0, 0x16, 0x34,
	0x06, 0x57, 0x83, 0xf1, 0x64, 0x30, 0x9c, 0xc4, 0xfe, 0x23, 0xe2, 0x41, 0xfd, 0xe2, 0xec, 0x6c,
	0x32, 0x3e, 0x8f, 0xfd, 0x52, 0xf8, 0x73, 0x09, 0x8e, 0xf7, 0x0b, 0xbc, 0x16, 0x32, 0xa3, 0x9a,
	0x09, 0x6e, 0x6a, 0x64, 0x3c, 0xc5, 0x37, 0xae, 0xc6, 0x23, 0xa8, 0xd3, 0x34, 0x95, 0xa8, 0x94,
	0x15, 0xd7, 0x30, 0xe2, 0x72, 0x21, 0xb5, 0x13, 0xf7, 0x9e, 0x75, 0x44, 0xa3, 0xd5, 0xe4, 0xf5,
	0xfd, 0xfb, 0x05, 0x92, 0x0f, 0xe1, 0x90, 0x39, 0xfb, 0xac, 0x40, 0xaf, 0xdf, 0x8d, 0x1e, 0x3a,
	0x1b, 0x2a, 0xe8, 0x14, 0xe8, 0x4b, 0x9a, 0xe7, 0x8c, 0xdf, 0x98, 0xdc, 0x1b, 0x94, 0x8a, 0x09,
	0xee, 0xc4, 0x74, 0xc1, 0x33, 0x56, 0x6c, 0x9f, 0xbc, 0x72, 0x6e, 0x3d, 0x83, 0xfa, 0x0e, 0x28,
	0x07, 0xe5, 0x13, 0xaf, 0xff, 0x24, 0x7a, 0x7b, 0x65, 0x47, 0x50, 0xcf, 0xa9, 0x5e, 0x32, 0x7e,
	0xd3, 0xab, 0x04, 0xe5, 0x93, 0x46, 0x78, 0x05, 0xef, 0x16, 0xcc, 0xd1, 0x8a, 0x21, 0xd7, 0xfb,
	0x7c, 0x1f, 0x0e, 0xd7, 0x0a, 0x25, 0xa7, 0x19, 0xda, 0xfc, 0x0d, 0x83, 0xe4, 0x54, 0xa9, 0x1f,
	0x85, 0x4c, 0x9d, 0x1b, 0x5d, 0xf0, 0x72, 0x94, 0x19, 0x53, 0x46, 0xa5, 0xb2, 0xa6, 0x34, 0xc2,
	0xdf, 0x4a, 0xd0, 0x2b, 0x02, 0xc7, 0x7c, 0x21, 0x6f, 0x73, 0x8d, 0xe9, 0x48, 0x62, 0xaa, 0xc8,
	0x47, 0xe0, 0x31, 0xce, 0xf4, 0x7c, 0x83, 0x0b, 0x2d, 0xa4, 0x0d, 0xdc, 0x1c, 0x76, 0xfe, 0xfc,
	0xfb, 0xaf, 0x3f, 0x4a, 0x1e, 0x34, 0x06, 0xf1, 0xec, 0xb3, 0xfe, 0x97, 0x2f, 0xf0, 0x96, 0x10,
	0x80, 0x05, 0xcb, 0x97, 0x28, 0x35, 0xbe, 0xd9, 0x8e, 0x5a, 0x93, 0x7c, 0x03, 0x35, 0xb5, 0xa4,
	0xfd, 0xcf, 0xbf, 0xb0, 0x89, 0x9a, 0xc3, 0xaf, 0xed, 0xb5, 0x01, 0xf9, 0x2a, 0x59, 0x62, 0xb0,
	0x3d, 0x09, 0xc4, 0x75, 0xa0, 0x97, 0x18, 0xe4, 0x2b, 0xca, 0x78, 0x60, 0xee, 0x06, 0xb8, 0x13,
	0x10, 0x18, 0x64, 0x89, 0x41, 0x11, 0x37, 0xb8, 0x66, 0xb8, 0x4a, 0xa3, 0xf0, 0xf9, 0x43, 0x27,
	0x8c, 0x5a, 0xe4, 0x9a, 0xd1, 0x95, 0x22, 0x9f, 0x40, 0xd5, 0x38, 0x61, 0x9e, 0xb1, 0x31, 0xf8,
	0x69, 0xf4, 0x1f, 0xb6, 0x85, 0x57, 0xd0, 0x2d, 0x8e, 0xa7, 0xf8, 0x1d, 0x5d, 0x51, 0xbe, 0x40,
	0x02, 0x70, 0xc0, 0x52, 0xe7, 0xe3, 0xfb, 0x50, 0xcf, 0xb6, 0x3d, 0x76, 0x3b, 0x84, 0x44, 0x0f,
	0xbb, 0xdf, 0x86, 0x5a, 0x26, 0x36, 0x86, 0x63, 0xda, 0x5a, 0x09, 0xbf, 0xdd, 0x1f, 0xc9, 0x33,
	0xb6, 0xc2, 0x91, 0xc8, 0x6f, 0xc9, 0x63, 0x68, 0xca, 0x5d, 0x8e, 0xf9, 0x5d, 0x82, 0x0e, 0x34,
	0x52, 0x26, 0xad, 0xc3, 0xb7, 0xae, 0x53, 0x3e, 0x1c, 0x5e, 0xb3, 0x15, 0xda, 0x6e, 0x96, 0x77,
	0x2f, 0xd9, 0x8e, 0x99, 0x1d, 0xa7, 0x70, 0xe4, 0xc2, 0x9b, 0x3d, 0x36, 0x58, 0xeb, 0x65, 0x22,
	0xbe, 0xc7, 0xb7, 0xbd, 0x81, 0x16, 0x54, 0xb9, 0xe0, 0x0b, 0x2c, 0xc6, 0x61, 0x49, 0xd5, 0xd2,
	0x75, 0xfe, 0x15, 0x3c, 0xdd, 0x5b, 0x86, 0x37, 0x4c, 0x69, 0x69, 0x4d, 0x71, 0x8b, 0xf1, 0x6e,
	0x78, 0x4c, 0xa8, 0x16, 0x09, 0xa1, 0xaa, 0x4d, 0x16, 0x67, 0x42, 0x37, 0x7a, 0x28, 0xe0, 0x9f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x15, 0xb2, 0x63, 0x73, 0xe5, 0x05, 0x00, 0x00,
}
