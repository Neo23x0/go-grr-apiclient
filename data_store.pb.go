// Code generated by protoc-gen-go.
// source: data_store.proto
// DO NOT EDIT!

package apiclient

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TimestampSpec_Type int32

const (
	TimestampSpec_SPECIFIC_TIME    TimestampSpec_Type = 0
	TimestampSpec_RANGED_TIME      TimestampSpec_Type = 1
	TimestampSpec_ALL_TIMESTAMPS   TimestampSpec_Type = 2
	TimestampSpec_NEWEST_TIMESTAMP TimestampSpec_Type = 3
)

var TimestampSpec_Type_name = map[int32]string{
	0: "SPECIFIC_TIME",
	1: "RANGED_TIME",
	2: "ALL_TIMESTAMPS",
	3: "NEWEST_TIMESTAMP",
}
var TimestampSpec_Type_value = map[string]int32{
	"SPECIFIC_TIME":    0,
	"RANGED_TIME":      1,
	"ALL_TIMESTAMPS":   2,
	"NEWEST_TIMESTAMP": 3,
}

func (x TimestampSpec_Type) Enum() *TimestampSpec_Type {
	p := new(TimestampSpec_Type)
	*p = x
	return p
}
func (x TimestampSpec_Type) String() string {
	return proto.EnumName(TimestampSpec_Type_name, int32(x))
}
func (x *TimestampSpec_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TimestampSpec_Type_value, data, "TimestampSpec_Type")
	if err != nil {
		return err
	}
	*x = TimestampSpec_Type(value)
	return nil
}
func (TimestampSpec_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{0, 0} }

// Options specific to the Value.
type DataStoreValue_Option int32

const (
	DataStoreValue_DEFAULT DataStoreValue_Option = 0
	// The value should replace other values in the data store (Used for Set
	// operations).
	DataStoreValue_REPLACE DataStoreValue_Option = 1
)

var DataStoreValue_Option_name = map[int32]string{
	0: "DEFAULT",
	1: "REPLACE",
}
var DataStoreValue_Option_value = map[string]int32{
	"DEFAULT": 0,
	"REPLACE": 1,
}

func (x DataStoreValue_Option) Enum() *DataStoreValue_Option {
	p := new(DataStoreValue_Option)
	*p = x
	return p
}
func (x DataStoreValue_Option) String() string {
	return proto.EnumName(DataStoreValue_Option_name, int32(x))
}
func (x *DataStoreValue_Option) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DataStoreValue_Option_value, data, "DataStoreValue_Option")
	if err != nil {
		return err
	}
	*x = DataStoreValue_Option(value)
	return nil
}
func (DataStoreValue_Option) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{1, 0} }

// Although we can relay exceptions they mess up the logs so we
// explicitly return them here.
type DataStoreResponse_Status int32

const (
	DataStoreResponse_OK                   DataStoreResponse_Status = 0
	DataStoreResponse_AUTHORIZATION_DENIED DataStoreResponse_Status = 1
	DataStoreResponse_DATA_STORE_ERROR     DataStoreResponse_Status = 2
	DataStoreResponse_FLOW_ERROR           DataStoreResponse_Status = 3
	DataStoreResponse_TIMEOUT_ERROR        DataStoreResponse_Status = 4
)

var DataStoreResponse_Status_name = map[int32]string{
	0: "OK",
	1: "AUTHORIZATION_DENIED",
	2: "DATA_STORE_ERROR",
	3: "FLOW_ERROR",
	4: "TIMEOUT_ERROR",
}
var DataStoreResponse_Status_value = map[string]int32{
	"OK": 0,
	"AUTHORIZATION_DENIED": 1,
	"DATA_STORE_ERROR":     2,
	"FLOW_ERROR":           3,
	"TIMEOUT_ERROR":        4,
}

func (x DataStoreResponse_Status) Enum() *DataStoreResponse_Status {
	p := new(DataStoreResponse_Status)
	*p = x
	return p
}
func (x DataStoreResponse_Status) String() string {
	return proto.EnumName(DataStoreResponse_Status_name, int32(x))
}
func (x *DataStoreResponse_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DataStoreResponse_Status_value, data, "DataStoreResponse_Status")
	if err != nil {
		return err
	}
	*x = DataStoreResponse_Status(value)
	return nil
}
func (DataStoreResponse_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{6, 0} }

// Represent a timestamp specification.
type TimestampSpec struct {
	Type             *TimestampSpec_Type `protobuf:"varint,1,opt,name=type,enum=TimestampSpec_Type,def=3" json:"type,omitempty"`
	Start            *uint64             `protobuf:"varint,2,opt,name=start" json:"start,omitempty"`
	End              *uint64             `protobuf:"varint,3,opt,name=end" json:"end,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *TimestampSpec) Reset()                    { *m = TimestampSpec{} }
func (m *TimestampSpec) String() string            { return proto.CompactTextString(m) }
func (*TimestampSpec) ProtoMessage()               {}
func (*TimestampSpec) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

const Default_TimestampSpec_Type TimestampSpec_Type = TimestampSpec_NEWEST_TIMESTAMP

func (m *TimestampSpec) GetType() TimestampSpec_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_TimestampSpec_Type
}

func (m *TimestampSpec) GetStart() uint64 {
	if m != nil && m.Start != nil {
		return *m.Start
	}
	return 0
}

func (m *TimestampSpec) GetEnd() uint64 {
	if m != nil && m.End != nil {
		return *m.End
	}
	return 0
}

type DataStoreValue struct {
	Attribute        *string                `protobuf:"bytes,1,opt,name=attribute" json:"attribute,omitempty"`
	Value            *DataBlob              `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Timestamp        *TimestampSpec         `protobuf:"bytes,5,opt,name=timestamp" json:"timestamp,omitempty"`
	Option           *DataStoreValue_Option `protobuf:"varint,4,opt,name=option,enum=DataStoreValue_Option" json:"option,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *DataStoreValue) Reset()                    { *m = DataStoreValue{} }
func (m *DataStoreValue) String() string            { return proto.CompactTextString(m) }
func (*DataStoreValue) ProtoMessage()               {}
func (*DataStoreValue) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

func (m *DataStoreValue) GetAttribute() string {
	if m != nil && m.Attribute != nil {
		return *m.Attribute
	}
	return ""
}

func (m *DataStoreValue) GetValue() *DataBlob {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *DataStoreValue) GetTimestamp() *TimestampSpec {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *DataStoreValue) GetOption() DataStoreValue_Option {
	if m != nil && m.Option != nil {
		return *m.Option
	}
	return DataStoreValue_DEFAULT
}

type DataStoreRequest struct {
	Subject          []string          `protobuf:"bytes,1,rep,name=subject" json:"subject,omitempty"`
	Values           []*DataStoreValue `protobuf:"bytes,2,rep,name=values" json:"values,omitempty"`
	Timestamp        *TimestampSpec    `protobuf:"bytes,5,opt,name=timestamp" json:"timestamp,omitempty"`
	Token            *ACLToken         `protobuf:"bytes,6,opt,name=token" json:"token,omitempty"`
	Sync             *bool             `protobuf:"varint,7,opt,name=sync" json:"sync,omitempty"`
	Limit            *uint32           `protobuf:"varint,8,opt,name=limit" json:"limit,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *DataStoreRequest) Reset()                    { *m = DataStoreRequest{} }
func (m *DataStoreRequest) String() string            { return proto.CompactTextString(m) }
func (*DataStoreRequest) ProtoMessage()               {}
func (*DataStoreRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{2} }

func (m *DataStoreRequest) GetSubject() []string {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *DataStoreRequest) GetValues() []*DataStoreValue {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *DataStoreRequest) GetTimestamp() *TimestampSpec {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *DataStoreRequest) GetToken() *ACLToken {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *DataStoreRequest) GetSync() bool {
	if m != nil && m.Sync != nil {
		return *m.Sync
	}
	return false
}

func (m *DataStoreRequest) GetLimit() uint32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type QueryASTNode struct {
	Name             *string         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Args             [][]byte        `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
	Children         []*QueryASTNode `protobuf:"bytes,3,rep,name=children" json:"children,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *QueryASTNode) Reset()                    { *m = QueryASTNode{} }
func (m *QueryASTNode) String() string            { return proto.CompactTextString(m) }
func (*QueryASTNode) ProtoMessage()               {}
func (*QueryASTNode) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{3} }

func (m *QueryASTNode) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *QueryASTNode) GetArgs() [][]byte {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *QueryASTNode) GetChildren() []*QueryASTNode {
	if m != nil {
		return m.Children
	}
	return nil
}

type DataStoreQuery struct {
	Attributes       []string       `protobuf:"bytes,1,rep,name=attributes" json:"attributes,omitempty"`
	Filter           *QueryASTNode  `protobuf:"bytes,2,opt,name=filter" json:"filter,omitempty"`
	SubjectPrefix    *string        `protobuf:"bytes,3,opt,name=subject_prefix" json:"subject_prefix,omitempty"`
	Subjects         []string       `protobuf:"bytes,4,rep,name=subjects" json:"subjects,omitempty"`
	Limit            *uint32        `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
	LimitStart       *uint32        `protobuf:"varint,6,opt,name=limit_start" json:"limit_start,omitempty"`
	Token            *ACLToken      `protobuf:"bytes,7,opt,name=token" json:"token,omitempty"`
	Timestamp        *TimestampSpec `protobuf:"bytes,8,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *DataStoreQuery) Reset()                    { *m = DataStoreQuery{} }
func (m *DataStoreQuery) String() string            { return proto.CompactTextString(m) }
func (*DataStoreQuery) ProtoMessage()               {}
func (*DataStoreQuery) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{4} }

func (m *DataStoreQuery) GetAttributes() []string {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *DataStoreQuery) GetFilter() *QueryASTNode {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *DataStoreQuery) GetSubjectPrefix() string {
	if m != nil && m.SubjectPrefix != nil {
		return *m.SubjectPrefix
	}
	return ""
}

func (m *DataStoreQuery) GetSubjects() []string {
	if m != nil {
		return m.Subjects
	}
	return nil
}

func (m *DataStoreQuery) GetLimit() uint32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *DataStoreQuery) GetLimitStart() uint32 {
	if m != nil && m.LimitStart != nil {
		return *m.LimitStart
	}
	return 0
}

func (m *DataStoreQuery) GetToken() *ACLToken {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *DataStoreQuery) GetTimestamp() *TimestampSpec {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type ResultSet struct {
	Subject          *string           `protobuf:"bytes,1,opt,name=subject" json:"subject,omitempty"`
	Values           []*DataStoreValue `protobuf:"bytes,2,rep,name=values" json:"values,omitempty"`
	SerializedResult []byte            `protobuf:"bytes,3,opt,name=serialized_result" json:"serialized_result,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ResultSet) Reset()                    { *m = ResultSet{} }
func (m *ResultSet) String() string            { return proto.CompactTextString(m) }
func (*ResultSet) ProtoMessage()               {}
func (*ResultSet) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{5} }

func (m *ResultSet) GetSubject() string {
	if m != nil && m.Subject != nil {
		return *m.Subject
	}
	return ""
}

func (m *ResultSet) GetValues() []*DataStoreValue {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *ResultSet) GetSerializedResult() []byte {
	if m != nil {
		return m.SerializedResult
	}
	return nil
}

type DataStoreResponse struct {
	Results []*ResultSet `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
	//
	Count            *uint32                   `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Status           *DataStoreResponse_Status `protobuf:"varint,3,opt,name=status,enum=DataStoreResponse_Status,def=0" json:"status,omitempty"`
	StatusDesc       *string                   `protobuf:"bytes,4,opt,name=status_desc" json:"status_desc,omitempty"`
	FailedSubject    *string                   `protobuf:"bytes,5,opt,name=failed_subject" json:"failed_subject,omitempty"`
	Request          *DataStoreRequest         `protobuf:"bytes,6,opt,name=request" json:"request,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *DataStoreResponse) Reset()                    { *m = DataStoreResponse{} }
func (m *DataStoreResponse) String() string            { return proto.CompactTextString(m) }
func (*DataStoreResponse) ProtoMessage()               {}
func (*DataStoreResponse) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{6} }

const Default_DataStoreResponse_Status DataStoreResponse_Status = DataStoreResponse_OK

func (m *DataStoreResponse) GetResults() []*ResultSet {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *DataStoreResponse) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *DataStoreResponse) GetStatus() DataStoreResponse_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Default_DataStoreResponse_Status
}

func (m *DataStoreResponse) GetStatusDesc() string {
	if m != nil && m.StatusDesc != nil {
		return *m.StatusDesc
	}
	return ""
}

func (m *DataStoreResponse) GetFailedSubject() string {
	if m != nil && m.FailedSubject != nil {
		return *m.FailedSubject
	}
	return ""
}

func (m *DataStoreResponse) GetRequest() *DataStoreRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func init() {
	proto.RegisterType((*TimestampSpec)(nil), "TimestampSpec")
	proto.RegisterType((*DataStoreValue)(nil), "DataStoreValue")
	proto.RegisterType((*DataStoreRequest)(nil), "DataStoreRequest")
	proto.RegisterType((*QueryASTNode)(nil), "QueryASTNode")
	proto.RegisterType((*DataStoreQuery)(nil), "DataStoreQuery")
	proto.RegisterType((*ResultSet)(nil), "ResultSet")
	proto.RegisterType((*DataStoreResponse)(nil), "DataStoreResponse")
	proto.RegisterEnum("TimestampSpec_Type", TimestampSpec_Type_name, TimestampSpec_Type_value)
	proto.RegisterEnum("DataStoreValue_Option", DataStoreValue_Option_name, DataStoreValue_Option_value)
	proto.RegisterEnum("DataStoreResponse_Status", DataStoreResponse_Status_name, DataStoreResponse_Status_value)
}

func init() { proto.RegisterFile("data_store.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 1054 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x95, 0xcd, 0x72, 0xe3, 0x44,
	0x10, 0xc7, 0x57, 0xfe, 0x4a, 0xdc, 0x8e, 0xbd, 0xca, 0xec, 0xd6, 0x96, 0x80, 0x82, 0x9d, 0xf5,
	0x81, 0xf2, 0x16, 0xa0, 0x2a, 0xcc, 0x9e, 0x72, 0x5a, 0xd9, 0x96, 0x37, 0xae, 0x78, 0xed, 0x20,
	0x2b, 0x2c, 0x45, 0x15, 0x65, 0xc6, 0x52, 0x3b, 0x9e, 0x20, 0x4b, 0x8e, 0x66, 0x94, 0x60, 0x5e,
	0x80, 0x17, 0xe0, 0x31, 0xe0, 0x2d, 0x38, 0x71, 0xe3, 0x15, 0xe0, 0x35, 0x28, 0x8a, 0x9a, 0x91,
	0xe3, 0xc4, 0x59, 0x0e, 0x70, 0xe0, 0x36, 0x1f, 0x3d, 0xff, 0xee, 0xfe, 0x75, 0xab, 0x05, 0x66,
	0xc8, 0x24, 0x9b, 0x0a, 0x99, 0xa4, 0x68, 0xaf, 0xd2, 0x44, 0x26, 0xef, 0xd6, 0xe6, 0x51, 0x72,
	0x2d, 0x36, 0x1b, 0xb8, 0x48, 0x66, 0x37, 0xeb, 0x86, 0xc0, 0x25, 0x8b, 0x25, 0x0f, 0xf2, 0x7d,
	0xf3, 0xd7, 0x02, 0xd4, 0x7d, 0xbe, 0x44, 0x21, 0xd9, 0x72, 0x35, 0x59, 0x61, 0x40, 0x3e, 0x83,
	0x92, 0x5c, 0xaf, 0xd0, 0x32, 0xa8, 0xd1, 0x6a, 0xb4, 0x1f, 0xd9, 0x3b, 0xb7, 0xb6, 0xbf, 0x5e,
	0xe1, 0x91, 0x39, 0x72, 0xdf, 0xb8, 0x13, 0x7f, 0xea, 0x0f, 0x5e, 0xbb, 0x13, 0xdf, 0x79, 0x7d,
	0x4a, 0xbe, 0x84, 0xb2, 0x90, 0x2c, 0x95, 0x56, 0x81, 0x1a, 0xad, 0x52, 0x67, 0xf0, 0xfb, 0x9f,
	0x7f, 0xfc, 0x62, 0x74, 0xa1, 0xe6, 0xf5, 0xfa, 0x3d, 0x26, 0x51, 0xf2, 0x25, 0x92, 0x17, 0x13,
	0x65, 0x41, 0x93, 0x39, 0x95, 0x0b, 0xa4, 0xf2, 0x46, 0x96, 0xa6, 0x2c, 0x3e, 0x47, 0xca, 0xe7,
	0x54, 0xb9, 0xa5, 0x5c, 0x50, 0xcf, 0x19, 0xbd, 0x72, 0x7b, 0x5a, 0xdd, 0x26, 0x3e, 0x14, 0x31,
	0x0e, 0xad, 0xa2, 0xd6, 0x7d, 0xa5, 0x75, 0x9d, 0x5d, 0xdd, 0xb6, 0x1b, 0x87, 0xff, 0x51, 0xb5,
	0xe9, 0x43, 0x49, 0x65, 0x42, 0x0e, 0xa1, 0x3e, 0x39, 0x75, 0xbb, 0x83, 0xfe, 0xa0, 0xab, 0x6f,
	0xcc, 0x07, 0xe4, 0x21, 0xd4, 0xee, 0x98, 0x9a, 0x06, 0x21, 0xd0, 0x70, 0x86, 0xc3, 0xdb, 0x64,
	0x27, 0x66, 0x81, 0x3c, 0x86, 0xb7, 0x18, 0x98, 0xc5, 0xe6, 0x4f, 0x06, 0x34, 0x7a, 0x4c, 0xb2,
	0x89, 0xaa, 0xc4, 0x17, 0x2c, 0xca, 0x94, 0x83, 0x2a, 0x93, 0x32, 0xe5, 0xb3, 0x4c, 0xe6, 0x48,
	0xab, 0xc4, 0x82, 0xf2, 0x95, 0xba, 0xd3, 0xac, 0x6a, 0xed, 0xaa, 0xad, 0x9e, 0x74, 0xa2, 0x64,
	0x46, 0x9e, 0x41, 0x75, 0x9b, 0x80, 0x55, 0xd6, 0xb7, 0x8d, 0x5d, 0xfe, 0xe4, 0x43, 0xa8, 0x24,
	0x2b, 0xc9, 0x93, 0xd8, 0x2a, 0xe9, 0xfa, 0x3c, 0xb1, 0x77, 0x1d, 0xda, 0x63, 0x7d, 0xdb, 0x6c,
	0x42, 0x25, 0x5f, 0x91, 0x1a, 0xec, 0xf5, 0xdc, 0xbe, 0x73, 0x36, 0xf4, 0xcd, 0x07, 0x6a, 0xe3,
	0xb9, 0xa7, 0x43, 0xa7, 0xeb, 0x9a, 0x46, 0xf3, 0x37, 0x03, 0xcc, 0xed, 0x6b, 0x0f, 0x2f, 0x33,
	0x14, 0x92, 0x74, 0x60, 0x4f, 0x64, 0xb3, 0x0b, 0x0c, 0xa4, 0x65, 0xd0, 0x62, 0xab, 0xda, 0xf9,
	0x54, 0x33, 0xff, 0x08, 0x2a, 0x5e, 0xaf, 0x7f, 0xe6, 0x8d, 0xc8, 0x33, 0x7f, 0x81, 0xd4, 0xe9,
	0xf7, 0x5f, 0xd0, 0x44, 0x9b, 0xd1, 0x6b, 0xa4, 0x3c, 0x96, 0x98, 0x32, 0xb5, 0xe6, 0x72, 0x61,
	0x93, 0xa7, 0x50, 0xd1, 0x19, 0x0a, 0xab, 0x40, 0x8b, 0xad, 0x5a, 0xfb, 0xe1, 0xbd, 0x20, 0xff,
	0x4d, 0xa2, 0x16, 0x94, 0x65, 0xf2, 0x2d, 0xc6, 0x56, 0x65, 0x43, 0xc9, 0xe9, 0x0e, 0x7d, 0x75,
	0x40, 0x0e, 0xa0, 0x24, 0xd6, 0x71, 0x60, 0xed, 0x51, 0xa3, 0xb5, 0x4f, 0xea, 0x50, 0x8e, 0xf8,
	0x92, 0x4b, 0x6b, 0x9f, 0x1a, 0xad, 0x7a, 0xf3, 0x04, 0x0e, 0x3e, 0xcf, 0x30, 0x5d, 0x3b, 0x13,
	0x7f, 0x94, 0x84, 0xa8, 0x8c, 0x63, 0xb6, 0xbc, 0x41, 0x7f, 0x00, 0x25, 0x96, 0x9e, 0xe7, 0x61,
	0x1d, 0x90, 0xa7, 0xb0, 0x1f, 0x2c, 0x78, 0x14, 0xa6, 0x18, 0x5b, 0x45, 0x1d, 0x68, 0xdd, 0xbe,
	0xfb, 0xb8, 0xf9, 0xd7, 0xdd, 0x7a, 0xea, 0x1b, 0x42, 0x00, 0xb6, 0xf5, 0x14, 0x39, 0x21, 0xf2,
	0x3e, 0x54, 0xe6, 0x3c, 0x92, 0x98, 0x6e, 0x2a, 0xba, 0xab, 0x42, 0x9e, 0x40, 0x63, 0x43, 0x74,
	0xba, 0x4a, 0x71, 0xce, 0xbf, 0xd3, 0xcd, 0x5c, 0x25, 0x2f, 0x61, 0x7f, 0x73, 0x2e, 0xac, 0x92,
	0x46, 0x6d, 0x6b, 0xd4, 0xad, 0x2d, 0xea, 0x0f, 0xee, 0xa1, 0x16, 0x8a, 0xf5, 0xa5, 0xd2, 0xa6,
	0xf3, 0x24, 0xb5, 0x6f, 0x73, 0x57, 0x08, 0xeb, 0xe4, 0x11, 0xd4, 0xf4, 0x76, 0x9a, 0x7f, 0x8a,
	0x15, 0x7d, 0xb8, 0xe5, 0xb8, 0x77, 0x9f, 0xe3, 0x4e, 0x11, 0xf6, 0xff, 0xa9, 0x08, 0xcd, 0x1f,
	0x0a, 0x50, 0xf5, 0x50, 0x64, 0x91, 0x9c, 0xe0, 0xbd, 0xd6, 0x30, 0xfe, 0xa7, 0xd6, 0xf8, 0xd1,
	0x80, 0x43, 0x81, 0x29, 0x67, 0x11, 0xff, 0x1e, 0xc3, 0x69, 0xaa, 0xbd, 0x6b, 0x62, 0x07, 0x9d,
	0xb5, 0xf6, 0x27, 0xc8, 0xa5, 0xc7, 0xae, 0xe9, 0x9c, 0x63, 0x14, 0xd2, 0xeb, 0x05, 0x0f, 0x16,
	0x74, 0x91, 0x44, 0xa1, 0xd0, 0x03, 0x40, 0x4d, 0x42, 0x7a, 0xfb, 0x9e, 0xf2, 0x98, 0x5e, 0x88,
	0x24, 0x56, 0xbc, 0x96, 0x4c, 0xda, 0xfe, 0x82, 0x8b, 0xdc, 0xe6, 0x9a, 0x47, 0x11, 0x9d, 0x21,
	0x65, 0x57, 0x8c, 0x47, 0x6c, 0x16, 0x21, 0xcd, 0x04, 0x8f, 0xcf, 0xb5, 0xc8, 0x8a, 0xad, 0xa3,
	0x84, 0x85, 0x74, 0x5b, 0x69, 0xbb, 0xf9, 0x73, 0x09, 0x0e, 0xef, 0x7c, 0x2b, 0x62, 0x95, 0xc4,
	0x02, 0xc9, 0x7b, 0xb0, 0x97, 0x07, 0x98, 0xb7, 0x42, 0xad, 0x0d, 0xf6, 0x2d, 0xae, 0xaf, 0xa1,
	0x1c, 0x24, 0x59, 0x9c, 0xcf, 0xc4, 0x7a, 0x67, 0xa4, 0x83, 0x3f, 0x26, 0x7d, 0x3f, 0x91, 0x2c,
	0xa2, 0x71, 0xb6, 0x9c, 0x61, 0xaa, 0xe6, 0xd6, 0x46, 0x81, 0x26, 0xb1, 0x76, 0x2e, 0x30, 0xbd,
	0xc2, 0x94, 0xb6, 0xba, 0x2c, 0x56, 0xf1, 0x2d, 0x93, 0x14, 0xa9, 0x5c, 0xb0, 0x98, 0x46, 0x18,
	0xb7, 0x36, 0xb6, 0xcf, 0x9f, 0xdb, 0xe4, 0x13, 0xa8, 0x08, 0xc9, 0x64, 0x26, 0x34, 0x9c, 0x46,
	0xfb, 0x1d, 0xfb, 0xad, 0xf8, 0xec, 0x89, 0x36, 0x38, 0x2a, 0x8c, 0x4f, 0xc8, 0x18, 0x6a, 0xb9,
	0xf9, 0x34, 0x44, 0x11, 0xe8, 0xe9, 0x51, 0xed, 0x1c, 0xe9, 0x98, 0x5e, 0x90, 0xb6, 0x13, 0x86,
	0x5c, 0x4d, 0x0b, 0x16, 0xd1, 0x45, 0xb6, 0x64, 0x31, 0x4d, 0x91, 0x85, 0x9a, 0xca, 0x12, 0x85,
	0x60, 0xe7, 0xa8, 0x00, 0xea, 0xf0, 0xe6, 0x8c, 0x47, 0x59, 0x8a, 0x36, 0xf9, 0x06, 0x1a, 0x6a,
	0x8d, 0xe1, 0xf4, 0xa6, 0x29, 0xca, 0x5a, 0xf3, 0x58, 0x6b, 0x76, 0xc8, 0xcb, 0x41, 0x4c, 0x03,
	0x26, 0x50, 0xa5, 0xb8, 0x79, 0xf4, 0x71, 0x9e, 0x60, 0x6e, 0xae, 0x92, 0x92, 0x34, 0x60, 0x99,
	0xc0, 0x50, 0x9f, 0xa7, 0xf9, 0x04, 0xa2, 0x32, 0xd1, 0xf6, 0x36, 0x39, 0x53, 0x74, 0xf5, 0xd9,
	0x66, 0x08, 0x1c, 0xda, 0xf7, 0xc7, 0xd5, 0x4d, 0x0b, 0x92, 0xe7, 0xfe, 0x1d, 0x85, 0xbc, 0x29,
	0x30, 0xe2, 0x01, 0x97, 0x5a, 0x9c, 0x0b, 0x45, 0x39, 0x67, 0xd2, 0x0c, 0xa0, 0x92, 0x73, 0x21,
	0x15, 0x28, 0x8c, 0x4f, 0xcc, 0x07, 0xc4, 0x82, 0xc7, 0xce, 0x99, 0x7f, 0x3c, 0xf6, 0x06, 0x5f,
	0x39, 0xfe, 0x60, 0x3c, 0x9a, 0xf6, 0xdc, 0xd1, 0xc0, 0xed, 0x99, 0x86, 0x9a, 0xf3, 0x3d, 0xc7,
	0x77, 0xa6, 0x13, 0x7f, 0xec, 0xb9, 0x53, 0xd7, 0xf3, 0xc6, 0x9e, 0x59, 0x20, 0x0d, 0x80, 0xfe,
	0x70, 0xfc, 0x66, 0xb3, 0x2f, 0xaa, 0xbf, 0x88, 0xfa, 0x0d, 0x8c, 0xcf, 0xfc, 0xcd, 0x51, 0xe9,
	0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbe, 0x79, 0xd9, 0x81, 0x93, 0x07, 0x00, 0x00,
}
